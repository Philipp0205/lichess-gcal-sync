server.port=${PORT:8080}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# PostgreSQL configuration.
spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto = update
# To improve the performance during development.
# For more information https://vaadin.com/docs/latest/integrations/spring/configuration#special-configuration-parameters
vaadin.allowed-packages = com.vaadin,org.vaadin,de.philipp.lichessgcalsync
spring.jpa.defer-datasource-initialization = true
# google Oauth
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
# lichess
spring.security.oauth2.client.registration.lichess.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LICHESS_CLIENT_ID}
spring.security.oauth2.client.registration.lichess.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LICHESS_CLIENT_SECRET}
spring.security.oauth2.client.registration.lichess.authorization-grant-type=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_LICHESS_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.lichess.redirect-uri={baseUrl}/
spring.security.oauth2.client.registration.lichess.scope=email:read

spring.security.oauth2.client.provider.lichess.authorization-uri=https://lichess.org/oauth
spring.security.oauth2.client.provider.lichess.token-uri=https://lichess.org/api/token
spring.security.oauth2.client.provider.lichess.user-info-uri=https://lichess.org/api/account
spring.security.oauth2.client.provider.lichess.user-name-attribute=id
